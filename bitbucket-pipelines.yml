definitions:
  scripts:
    clean_source: &cleanSource |-
      rm -rf .hgignore bitbucket-pipelines.yml .hg .git .gitignore
    clean_test_results: &cleanTestResults |-
      rm -rf test-results
    pack_zip: &packZip |-
      echo "Will create ${BITBUCKET_REPO_SLUG}.zip"
      zip -r ${BITBUCKET_REPO_SLUG}.zip .
    prepare_ssh: &prepareSSH |-
      mkdir -p ~/.ssh
      echo ${AW_COMPOSER_KNOWN_HOSTS} >> ~/.ssh/known_hosts
      (umask  077 ; echo ${AW_COMPOSER_SSH_KEY} | base64 --decode > ~/.ssh/id_rsa)
      # prepare git must be removed
    prepare_git: &prepare_git |-
      echo 'skip'
      apk add --update openssh
      apk add --update coreutils
      apk add git
      echo ${DEVOPS_SSH_KEY} | base64 --decode > ~/.ssh/id_rsa
      chmod 700 ~/.ssh
      chmod 600 ~/.ssh/id_rsa
    get_repositories: &getRepositories |-
      TOKEN=$(curl -s -X POST -u "${BITBUCKET_KEY}:${BITBUCKET_SECRET}"  https://bitbucket.org/site/oauth2/access_token  -d grant_type=client_credentials | sed  -E 's/.*"access_token":? "?([^,"]*)"?.*/\1/')
      curl -H "Authorization: Bearer ${TOKEN}" https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE?pagelen=100 >> repositories
      curl -H "Authorization: Bearer ${TOKEN}" https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE?pagelen=100\&page=2 >> repositories2

  build_steps:
    - step: &build
        image: atlassian/default-image:2
        name: Clean and pack sources
        script:
          - *cleanSource
          - *packZip
        artifacts:
          - "*.zip"
  test_steps:
    - step: &validatePackage-2.4.4-p2
        name: Validate marketplace package on Magento 2.4.4-p2
        image: aheadworks/m2test-new:2.4.4-p2-without-dump-8.1
        script:
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager validate-m2-package ${BITBUCKET_REPO_SLUG}.zip
    - step: &validatePackage-2.4.5-p1
        name: Validate marketplace package on Magento 2.4.5-p1
        image: aheadworks/m2test-new:2.4.5-p1-without-dump-8.1
        script:
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager validate-m2-package ${BITBUCKET_REPO_SLUG}.zip
    - step: &codesnifferTest-2.4.5-p1
        name: Run codesniffer tests
        image: aheadworks/m2test-new:2.4.5-p1-without-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager codesniffer ${PWD} test-results/codesniffer-2.4.5-p1.xml
        artifacts:
          - "test-results/**"
    - step: &unitTestPHP81-244
        name: Run unit tests PHP 8.1 on Magento 2.4.4-p2
        image: aheadworks/m2test-new:2.4.4-p2-with-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.4-p2.xml
        artifacts:
          - "test-results/**"
    - step: &unitTestPHP81
        name: Run unit tests PHP 8.1 on Magento 2.4.5-p1
        image: aheadworks/m2test-new:2.4.5-p1-with-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager unit ${PWD} test-results/test-unit-2.4.5-p1.xml
        artifacts:
          - "test-results/**"
    - step: &phpstanTestPHP81-244
        name: Run phpstan tests PHP 8.1 on Magento 2.4.4-p2
        image: aheadworks/m2test-new:2.4.4-p2-without-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.4-p2.xml
        artifacts:
          - "test-results/**" 
    - step: &phpstanTestPHP81
        name: Run phpstan tests PHP 8.1 on Magento 2.4.5-p1
        image: aheadworks/m2test-new:2.4.5-p1-without-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager phpstan ${PWD} test-results/test-phpstan-2.4.5-p1.xml
        artifacts:
          - "test-results/**"
    - step: &messDetectorTestPHP81
        name: Run mess detector tests PHP 8.1
        image: aheadworks/m2test-new:2.4.5-p1-without-dump-8.1
        script:
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager mess-detector ${PWD}
        artifacts:
          - "test-results/**"
    - step: &installMagento-2.4.4-p2
        name: Run install Magento 2.4.4-p2 test
        image: aheadworks/m2test-new:2.4.4-p2-without-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/test-unit.xml
        artifacts:
          - "logs1/**"
          - "test-results/test-unit.xml"
    - step: &installMagento-2.4.5-p1
        name: Run install Magento 2.4.5-p1 test
        image: aheadworks/m2test-new:2.4.5-p1-without-dump-8.1
        script:
          - mkdir test-results
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_test_manager install-magento ${PWD} test-results/test-unit.xml
        artifacts:
          - "logs1/**"
          - "test-results/test-unit.xml"

  deployment_steps:
    - step: &rebuildPrivateComposer
        name: Sync tags and branches to the Internal composer
        image: aheadworks/deploy-tools:new-gen
        script:
          - *cleanTestResults
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_bitbucket_manager internal_composer_refresh
    - step: &releaseToPublicComposer
        name: Add the new package to the Public composer repository
        image: aheadworks/deploy
        username: ${DOCKERHUB_LOGIN}
        password: ${DOCKERHUB_PASSWORD}
        script:
          - *cleanTestResults
          - *prepareSSH
          - VERSION=$(cat composer.json | jq -r '.version') && NAME=$(cat composer.json | jq -r '.name')
          - test -f ${BITBUCKET_REPO_SLUG}.zip
          - echo "Ready to push ${NAME}-${VERSION} to ${AW_COMPOSER_API_URL}"
          - ssh -t ${AW_COMPOSER_SSH_URL} "mkdir -p ${AW_COMPOSER_PACKAGES_ROOT}/${NAME}"
          - scp ${BITBUCKET_REPO_SLUG}.zip ${AW_COMPOSER_SSH_URL}:${AW_COMPOSER_PACKAGES_ROOT}/${NAME}/${BITBUCKET_REPO_SLUG}-${VERSION}.zip
          - REPO_URL=${AW_COMPOSER_API_URL} REPO_LOGIN=${AW_COMPOSER_API_LOGIN} REPO_TOKEN=${AW_COMPOSER_API_PASSWORD} deploy comp -p send-package --filename=${BITBUCKET_REPO_SLUG}-${VERSION}.zip ${BITBUCKET_REPO_SLUG}.zip
    - step: &build_packages
        name: Build store and marketplace packages and send them to Jira
        image: aheadworks/deploy-tools:new-gen
        script:
            - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
            - python3 -m aheadworks_release_manager build-ecommerce-pack --bitbucket_workspace=${BITBUCKET_WORKSPACE} --bitbucket_repo_slug=${BITBUCKET_REPO_SLUG}
            - python3 -m aheadworks_release_manager build-mm-pack --bitbucket_workspace=${BITBUCKET_WORKSPACE} --bitbucket_repo_slug=${BITBUCKET_REPO_SLUG}
            - if [[ "$BITBUCKET_REPO_SLUG" == "module-test" ]]; then DISCORD_BOT_URL=${TEST_DISCORD_MAGENTO_RELEASE_BOT_URL}; else DISCORD_BOT_URL=${DISCORD_MAGENTO_RELEASE_BOT_URL}; fi;
            - python3 -m aheadworks_release_manager jira-release --jira_project_key="${JIRA_PROJECT_KEY}" --composer-file="./composer.json" --discord-bot-url="${DISCORD_BOT_URL}" --path_to_files="/build_archives" --assign_to="${AFTER_RELEASE_ASSIGN_TO}"
        artifacts:
            - "/build_archives/**"
    - step: &swaggerWebApiDocBuild
        name: Build Web Api Documentation and publish it at S3
        image: aheadworks/deploy-tools:latest
        services:
          - m24-81
        script:
          - pip install --upgrade pip && pip3 install aheadworks-deploy-manager
          - python3 -m aheadworks_release_manager build-swagger-web-api-doc --path-to-module=./ --magento_url=http://localhost --ssh_port=22
    - step: &get_key
        # is it useful?
        name: get_key
        image: aheadworks/m2test-new:test-7.4
        script:
          - echo ${DEVOPS_SSH_KEY} > key
          - printenv > env
        artifacts:
          - key
          - env
  services:
    m24-81:
      image: aheadworks/m2test-new:2.4.4-p2-with-dump-8.1
pipelines:
  tags:
    '*.*.*':
      - step: *rebuildPrivateComposer
  branches:
    # For commits to master branch: run full set of tests
    master:
      - step: *build
      - parallel:
          - step: *validatePackage-2.4.4-p2
          - step: *validatePackage-2.4.5-p1
          - step: *codesnifferTest-2.4.5-p1
          - step: *unitTestPHP81-244
          - step: *unitTestPHP81
          - step: *installMagento-2.4.4-p2
          - step: *installMagento-2.4.5-p1
      - step: *rebuildPrivateComposer
      - step: *build_packages
      - step: *swaggerWebApiDocBuild
      - step: *releaseToPublicComposer

    # For every commit to develop branch: run tests
    develop:
      - parallel:
          - step: *codesnifferTest-2.4.5-p1
          - step: *unitTestPHP81-244
          - step: *unitTestPHP81
          - step: *phpstanTestPHP81-244
          - step: *phpstanTestPHP81
          - step: *messDetectorTestPHP81
          - step: *installMagento-2.4.4-p2
          - step: *installMagento-2.4.5-p1
      - step: *rebuildPrivateComposer
    feature/*:
      - parallel:
        - step: *codesnifferTest-2.4.5-p1
        - step: *unitTestPHP81-244
        - step: *installMagento-2.4.5-p1
    bugfix/*:
      - parallel:
        - step: *codesnifferTest-2.4.5-p1
        - step: *unitTestPHP81-244
        - step: *installMagento-2.4.5-p1
    release/*:
      - step: *build
      - parallel:
          - step: *validatePackage-2.4.4-p2
          - step: *validatePackage-2.4.5-p1
          - step: *codesnifferTest-2.4.5-p1
          - step: *unitTestPHP81-244
          - step: *unitTestPHP81
          - step: *installMagento-2.4.4-p2
          - step: *installMagento-2.4.5-p1

  custom:
    # Manual upload to the Public composer repository
    release-to-public-composer:
      - step: *build
      - parallel:
          - step: *validatePackage-2.4.4-p2
          - step: *validatePackage-2.4.5-p1
      - step: *releaseToPublicComposer

    # Manual resync of tags and branches for Internal composer repo
    rebuild-private-composer:
      - step: *rebuildPrivateComposer

    # Build pack manually
    build-marketplace-package:
      - step: *build
      - parallel:
          - step: *validatePackage-2.4.4-p2
          - step: *validatePackage-2.4.5-p1

    # Run tests manually
    run-all-tests:
      - parallel:
          - step: *codesnifferTest-2.4.5-p1
          - step: *unitTestPHP81-244
          - step: *unitTestPHP81
          - step: *phpstanTestPHP81-244
          - step: *phpstanTestPHP81
          - step: *messDetectorTestPHP81
          - step: *installMagento-2.4.4-p2
          - step: *installMagento-2.4.5-p1

    # Run prerelease tests manually
    run-prerelease-tests:
      - parallel:
          - step: *codesnifferTest-2.4.5-p1
          - step: *unitTestPHP81-244
          - step: *unitTestPHP81
          - step: *installMagento-2.4.4-p2
          - step: *installMagento-2.4.5-p1

    get_key:
      - step: *get_key

    #prepare build
    build_packages:
      - step: *build_packages

    # Manually rebuild Web Api Documentation and publish it at S3
    swagger-web-api-doc-build:
      - step: *swaggerWebApiDocBuild

    # copy this file to all modules

    codesniffer-test-with-select-severity:
      - variables:
          - name: SEVERITY
            default: 9
      - step: *codesnifferTest-2.4.5-p1

    phpstan-test-with-select-severity:
      - variables:
          - name: SEVERITY
            default: 0
      - step: *phpstanTestPHP81-244
      - step: *phpstanTestPHP81

    mess-detector-test:
      - step: *messDetectorTestPHP81
